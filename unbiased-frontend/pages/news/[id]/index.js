import Head from "next/head";
import CommentList from "../../../components/CommentList";
import { useAppContext } from "../../../context";
import types from "../../../types";
import {news, users} from "../../../hardcoded";
import PositivityIndicator from "../../../components/PositivityIndicator";
import FormattedDate from "../../../components/FormattedDate";
import ProfilePic from "../../../components/ProfilePic";
import NewsCategoryPills from "../../../components/NewsCategoryPills";
import Link from "next/link";
import ProfileLink from "../../../components/ProfileLink";
import Bookmark from "../../../components/Bookmark";
import ReportFlag from "../../../components/ReportFlag";

export async function getServerSideProps(context) {
  return {
    props: {...news[0]} ,
  }
}

export default function ShowNews(props) {
  const {I18n, loggedUser}= useAppContext();

  let upvoteClass = ''

  if (props.rating > 0)
    upvoteClass = 'upvoted'
  else if (props.rating < 0)
    upvoteClass = 'downvoted'
  return(
    <>
      <Head>
        <title>unbiased - {props.title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/img/unbiased-logo-circle.png" />
      </Head>
      <div className="d-flex align-items-center justify-content-center w-100 py-4">
        <div className="h-auto w-75 d-flex flex-column ">
          <div className="d-flex align-items-center  ">
            <div className="upvote-div-home d-flex flex-column align-items-center">
              <img id="upvote"
                   className="svg-btn hover-hand"
                   src={`/img/upvote${props.rating > 0 ? '-clicked' : ''}.svg`}/>
              <div id="rating" className={upvoteClass}>
                123
              </div>
              <img id="downvote"
                   className="svg-btn hover-hand"
                   src={`/img/downvote${props.rating < 0 ? '-clicked' : ''}.svg`}/>
            </div>
            <h2 className="text-xl-center mx-auto max-w-75 m-3 text-white overflow-wrap">
              {props.title}
            </h2>
            <div className="upvote-div-home d-flex flex-column align-items-center m-3">
              <PositivityIndicator showNews {...props.stats}></PositivityIndicator>
            </div>
          </div>
          <hr/>
          {props.hasImage ? <img className="w-50 m-4 max-h-300px rounded mx-auto d-block img-thumbnail" src={`/news/${props.id}/image`} alt=""/>
           : <></>}
          <div className="d-flex align-items-center justify-content-between">
            <div className="d-flex gap-1 align-items-center justify-content-between w-100">
              <h4 className="text-lg-left mb-0 text-white">
                {props.subtitle}
              </h4>
            </div>
            {loggedUser ? <div className="d-flex flex-row align-items-center gap-4px">
              <div className="ml-2 d-flex justify-content-center align-items-center">
                <Bookmark saved={props.saved} onSave={(e) => {}}></Bookmark>
              </div>
              <div className="ml-2 d-flex justify-content-center align-items-center">
                <ReportFlag id={props.id}></ReportFlag>
              </div>
            </div>: <></>}
          </div>

          <p className="text-sm-left text-secondary mr-1">
            <FormattedDate datetime={props.datetime}></FormattedDate>{" â€¢ "}
            <img id="clock"
              className="read-clock mx-1 mb-1"
              src={"/img/clock-svgrepo-com.svg"} />
            {I18n("home.read", [props.readTime])}
          </p>

          <div className="w-fit">
            <div className="w-fit d-flex flex-row align-items-center p-2 gap-1">
              <div className="img-container-article">
                <ProfilePic {...props.creator}></ProfilePic>
              </div>
              <ProfileLink bold {...props.creator}></ProfileLink>
            </div>
          </div>

          <div className="w-50 d-flex flex-wrap align-items-center gap-1 mt-3">
            <div className="text-sm-left font-weight-bold text-white w-100 d-flex gap-1">
              {props.categories.length ? <div className="w-fit text-sm-left font-weight-bold text-white">
                {I18n("showNews.categories")}
              </div> : <></>}
              <NewsCategoryPills categories={props.categories}></NewsCategoryPills>
            </div>
          </div>

          <div className="d-flex w-100 min-vh-65 align-items-center flex-column">
            <div className="article-body p-5" dangerouslySetInnerHTML={{__html: props.body}}>
            </div>
            <CommentList comments={props.comments}></CommentList>
        </div>
      </div>
      </div>
    </>
  )
}

ShowNews.propTypes = types.ShowNews